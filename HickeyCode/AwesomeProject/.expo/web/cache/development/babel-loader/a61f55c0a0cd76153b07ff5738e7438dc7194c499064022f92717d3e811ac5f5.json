{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Movie = function Movie(_ref) {\n  var title = _ref.title,\n    releaseYear = _ref.releaseYear;\n  return _jsxs(View, {\n    style: styles.movieContainer,\n    children: [_jsx(Text, {\n      style: styles.movieTitle,\n      children: title\n    }), _jsx(Text, {\n      style: styles.movieYear,\n      children: releaseYear\n    })]\n  });\n};\nvar APIdemo = function APIdemo() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var getMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://reactnative.dev/movies.json');\n        var json = yield response.json();\n        setData(json.movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMovies();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"API Demo\"\n    }), _jsx(FlatList, {\n      data: data.slice(0, 2),\n      keyExtractor: function keyExtractor(_ref3) {\n        var id = _ref3.id;\n        return id.toString();\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(Movie, {\n          title: item.title,\n          releaseYear: item.releaseYear\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  movieContainer: {\n    backgroundColor: 'lightblue',\n    marginBottom: 8,\n    padding: 8,\n    borderRadius: 10\n  },\n  movieTitle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  movieYear: {\n    fontSize: 14,\n    fontStyle: 'italic'\n  }\n});\nexport default APIdemo;","map":{"version":3,"names":["React","useState","useEffect","Text","FlatList","View","StyleSheet","jsx","_jsx","jsxs","_jsxs","Movie","_ref","title","releaseYear","style","styles","movieContainer","children","movieTitle","movieYear","APIdemo","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","getMovies","_ref2","_asyncToGenerator","response","fetch","json","movies","error","console","apply","arguments","container","slice","keyExtractor","_ref3","id","toString","renderItem","_ref4","item","create","flex","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius","fontStyle"],"sources":["C:/Users/User/Desktop/Dyroth/School/Senior year/Mobile/cosiMobileAppSummer/HickeyCode/AwesomeProject/components/APIdemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, FlatList, View, StyleSheet } from 'react-native';\r\n\r\nconst Movie = ({ title, releaseYear }) => (\r\n  <View style={styles.movieContainer}>\r\n    <Text style={styles.movieTitle}>{title}</Text>\r\n    <Text style={styles.movieYear}>{releaseYear}</Text>\r\n  </View>\r\n);\r\n\r\nconst APIdemo = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getMovies = async () => {\r\n    try {\r\n      const response = await fetch('https://reactnative.dev/movies.json');\r\n      const json = await response.json();\r\n      setData(json.movies);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>API Demo</Text>\r\n\r\n      <FlatList\r\n        data={data.slice(0, 2)}\r\n        keyExtractor={({ id }) => id.toString()}\r\n        renderItem={({ item }) => (\r\n          <Movie title={item.title} releaseYear={item.releaseYear} />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  movieContainer: {\r\n    backgroundColor: 'lightblue',\r\n    marginBottom: 8,\r\n    padding: 8,\r\n    borderRadius: 10,\r\n  },\r\n  movieTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  movieYear: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n});\r\n\r\nexport default APIdemo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}